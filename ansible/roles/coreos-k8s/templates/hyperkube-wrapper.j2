#!/bin/bash
# Wrapper for launching kubelet via rkt-fly stage1.
#
# Make sure to set KUBELET_VERSION to an image tag published here:
# https://quay.io/repository/coreos/hyperkube?tab=tags Alternatively,
# override $KUBELET_ACI to a custom location.

set -e

if [ -z "${KUBELET_VERSION}" ]; then
    echo "ERROR: must set KUBELET_VERSION"
    exit 1
fi

KUBELET_ACI="${KUBELET_ACI:-quay.io/coreos/hyperkube}"

mkdir --parents /etc/kubernetes
mkdir --parents /var/lib/docker
mkdir --parents /var/lib/kubelet
mkdir --parents /run/kubelet

exec /usr/bin/rkt run \
  --volume etcd-certs,kind=host,source=/etc/ssl/etcd/ \
  --volume etc-kubernetes,kind=host,source=/etc/kubernetes \
  --volume etc-ssl-certs,kind=host,source=/usr/share/ca-certificates \
  --volume var-lib-docker,kind=host,source=/var/lib/docker \
  --volume var-lib-kubelet,kind=host,source=/var/lib/kubelet \
  --volume os-release,kind=host,source=/usr/lib/os-release \
  --volume run,kind=host,source=/run \
  --mount volume=etcd-certs,target=/etc/ssl/etcd/ \
  --mount volume=etc-kubernetes,target=/etc/kubernetes \
  --mount volume=etc-ssl-certs,target=/etc/ssl/certs \
  --mount volume=var-lib-docker,target=/var/lib/docker \
  --mount volume=var-lib-kubelet,target=/var/lib/kubelet \
  --mount volume=os-release,target=/etc/os-release \
  --mount volume=run,target=/run \
  --trust-keys-from-https \
  $RKT_OPTS \
  --stage1-from-dir=stage1-fly.aci \
  ${KUBELET_ACI}:${KUBELET_VERSION} --exec=/${EXEC} -- "$@"
