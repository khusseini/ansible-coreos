---
- include_role:
    name: coreos
    tasks_from: gather_facts
  vars:
    cenv: {}
    config:
      coreos:
        units:
        - name: kubernetes-networking.target
          command: start
          content: |
            [Unit]
            Description=services required for proper container networking
        - name: dnsmask.service
          command: start
          enable: true
          content: "{{ lookup('template', 'templates/dnsmask.service.j2') }}"
      write_files:
      - path: /opt/bin/check-cordon
        permissions: '0775'
        content: |
          #!/bin/bash
          /opt/bin/wait-for-apiserver
          /usr/bin/docker run --rm --net=host -v /etc/kubernetes/ssl/:/etc/kubernetes/ssl/ {{ hyperkube_aci }}:{{ hyperkube_aci_tag }} \
          /hyperkube kubectl --client-key=/etc/kubernetes/ssl/worker-key.pem --client-certificate=/etc/kubernetes/ssl/worker.pem \
          --server=https://127.0.0.1:8888 --certificate-authority=/etc/kubernetes/ssl/ca.pem get nodes  | grep {{ inventory_hostname }} | grep  -q SchedulingDisabled
      - path: /opt/bin/uncordon-node
        permissions: '0775'
        content: |
          #!/bin/sh
          while /opt/bin/check-cordon
          do
             /usr/bin/docker run --rm --net=host -v /etc/kubernetes/ssl/:/etc/kubernetes/ssl/ {{ hyperkube_aci }}:{{ hyperkube_aci_tag }} \
             /hyperkube kubectl --client-key=/etc/kubernetes/ssl/worker-key.pem --client-certificate=/etc/kubernetes/ssl/worker.pem \
             --server=https://127.0.0.1:8888 --certificate-authority=/etc/kubernetes/ssl/ca.pem uncordon {{ inventory_hostname }} || true
          done
      - path: /opt/bin/drain-node
        permissions: '0775'
        content: "{{ lookup('template', 'templates/drain-node.j2') }}"

      - path: /etc/kubernetes/worker-kubeconfig.yaml
        content: |
          apiVersion: v1
          kind: Config
          clusters:
          - name: local
            cluster:
              certificate-authority: /etc/kubernetes/ssl/ca.pem
          users:
          - name: kubelet
            user:
              client-certificate: /etc/kubernetes/ssl/worker.pem
              client-key: /etc/kubernetes/ssl/worker-key.pem
          contexts:
          - context:
              cluster: local
              user: kubelet
            name: kubelet-context
          current-context: kubelet-context

- include: "{{ item }}"
  with_fileglob:
  - "facts_gathered/*.yml"
